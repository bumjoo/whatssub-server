# import Admin from "admin.graphql"
# import User from "user.graphql"
# import Notification from "notification.graphql"
# import SubOption from "sub_option.graphql"
# import Service from "service.graphql"
# import Product from "Product.graphql"

type Query {
  user(id: ID!): User!
  users: [User!]!
  service(id: ID!): Service!
  services: [Service!]!
  product: Product!
  products: [Product!]!
}

type Mutation {
  signInAdmin(email: String!, password: String!): Admin
  signUp(user: UserCreateInput!): AuthPayload!
  signInGoogle(socialUser: SocialUserCreateInput!): AuthPayload
  signInFacebook(socialUser: SocialUserCreateInput!): AuthPayload
  addPushToken(notification: NotificationCreateInput!): Notification
  createService(service: ServiceCreateInput!, subOption: SubOptionCreateInput): Service!
  updateService(service: ServiceUpdateInput!, subOption: SubOptionCreateInput): Service!
  deleteService(id: ID!): Service!
  createProduct(product: ProductCreateInput!, subOption: SubOptionCreateInput): Product!
  updateProduct(product: ProductUpdateInput!, subOption: SubOptionCreateInput): Product!
  deleteProduct(id: ID!): Product!
}

type Subscription {
  userAdded: User
  serviceAdded: Service
  serviceUpdated: Service
  serviceDestroyed: Service
  productAdded: Product
  productUpdated: Product
  productDestroyed: Product
}
